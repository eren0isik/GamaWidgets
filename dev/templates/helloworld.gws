{
    "iddata": {
        "name": "deneme",
        "version": "1.0.0",
        "des": "Dnemeeee sdaasd"
    },
    "files": {
        "app.py": "ZnJvbSBzcmMuZ2FtYWxpYiBpbXBvcnQgKg0KDQoNCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6DQogICAgY3VzdG9tX3dpbmRvdyA9IEN1c3RvbVRraW50ZXJXaW5kb3codGl0bGU9IkN1c3RvbSBUa2ludGVyIFdpbmRvdyIsIHdpZHRoPTgwMCwgaGVpZ2h0PTYwMCwgYXBwZWFyYW5jZV9tb2RlPSJkYXJrIiwgY29sb3JfdGhlbWU9ImJsdWUiKQ0KICAgIA0KICAgICMgxZ5lZmZhZmzEsWsgYXlhcmxhbWENCiAgICBjdXN0b21fd2luZG93LnNldF90cmFuc3BhcmVudF9iYWNrZ3JvdW5kKCJtYWdlbnRhIikNCiAgICANCiAgICAjIExhYmVsIGVrbGVtZQ0KICAgIGN1c3RvbV93aW5kb3cuYWRkX2xhYmVsKHRleHQ9IkhvxZ8gZ2VsZGluaXohIiwgZm9udD0oIkFyaWFsIiwgMTAwKSkNCg0KICAgIA0KICAgICMgUGVuY2VyZXlpIGhlciB6YW1hbiBlbiDDvHN0dGUgdHV0bWENCiAgICBjdXN0b21fd2luZG93LnNldF9vbl90b3AoKQ0KICAgIA0KICAgICMgVXlndWxhbWF5xLEgYmHFn2xhdG1hDQogICAgY3VzdG9tX3dpbmRvdy5ydW4oKQ0K",
        "gama.py": "aW1wb3J0IG9zDQppbXBvcnQgYmFzZTY0DQppbXBvcnQganNvbg0KZnJvbSBwYXRobGliIGltcG9ydCBQYXRoDQoNCnB5bG9jID0gInB5dGhvblxcIg0KDQpwcmludCgiIiINCuKWkeKWkuKWk+KWiOKWk+KWkuKWkeKWkeKWkuKWk+KWiOKWk+KWkuKWkeKWkeKWkuKWk+KWk+KWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWk+KWkuKWkeKWkeKWkeKWkuKWk+KWiOKWk+KWkuKWkSAgICAgICDilpHilpLilpPilojilpPilpLilpEgICAgICAg4paR4paS4paT4paI4paI4paI4paI4paI4paI4paT4paS4paRICAgICAgIA0K4paR4paS4paT4paI4paT4paS4paR4paR4paS4paT4paI4paT4paS4paR4paR4paS4paT4paI4paT4paS4paRICAgICAgIOKWkeKWkuKWk+KWiOKWk+KWkuKWkSAgICAgICDilpHilpLilpPilojilpPilpLilpEgICAgICDilpHilpLilpPilojilpPilpLilpHilpHilpLilpPilojilpPilpLilpEgICAgICANCuKWkeKWkuKWk+KWiOKWk+KWkuKWkeKWkeKWkuKWk+KWiOKWk+KWkuKWkeKWkeKWkuKWk+KWiOKWk+KWkuKWkSAgICAgICDilpHilpLilpPilojilpPilpLilpEgICAgICAg4paR4paS4paT4paI4paT4paS4paRICAgICAg4paR4paS4paT4paI4paT4paS4paR4paR4paS4paT4paI4paT4paS4paRICAgICAgDQrilpHilpLilpPilojilojilojilojilojilojilojilojilpPilpLilpHilpHilpLilpPilojilojilojilojilojilojilpPilpLilpEgIOKWkeKWkuKWk+KWiOKWk+KWkuKWkSAgICAgICDilpHilpLilpPilojilpPilpLilpEgICAgICDilpHilpLilpPilojilpPilpLilpHilpHilpLilpPilojilpPilpLilpEgICAgICANCuKWkeKWkuKWk+KWiOKWk+KWkuKWkeKWkeKWkuKWk+KWiOKWk+KWkuKWkeKWkeKWkuKWk+KWiOKWk+KWkuKWkSAgICAgICDilpHilpLilpPilojilpPilpLilpEgICAgICAg4paR4paS4paT4paI4paT4paS4paRICAgICAg4paR4paS4paT4paI4paT4paS4paR4paR4paS4paT4paI4paT4paS4paRICAgICAgDQrilpHilpLilpPilojilpPilpLilpHilpHilpLilpPilojilpPilpLilpHilpHilpLilpPilojilpPilpLilpEgICAgICAg4paR4paS4paT4paI4paT4paS4paRICAgICAgIOKWkeKWkuKWk+KWiOKWk+KWkuKWkSAgICAgIOKWkeKWkuKWk+KWiOKWk+KWkuKWkeKWkeKWkuKWk+KWiOKWk+KWkuKWkSAgICAgIA0K4paR4paS4paT4paI4paT4paS4paR4paR4paS4paT4paI4paT4paS4paR4paR4paS4paT4paI4paI4paI4paI4paI4paI4paI4paI4paT4paS4paR4paR4paS4paT4paI4paI4paI4paI4paI4paI4paI4paI4paT4paS4paR4paR4paS4paT4paI4paI4paI4paI4paI4paI4paI4paI4paT4paS4paR4paR4paS4paT4paI4paI4paI4paI4paI4paI4paT4paS4paRICAgICAgIA0KIiIiKQ0KDQojIERvc3lhZGFraSB0w7xtIGRvc3lhbGFyxLEgbGlzdGVsZW1law0KZGVmIGxpc3RfYWxsX2l0ZW1zKGRpcmVjdG9yeSk6DQogICAgcmV0dXJuIFtzdHIoaXRlbSkgZm9yIGl0ZW0gaW4gUGF0aChkaXJlY3RvcnkpLnJnbG9iKCcqJykNCiAgICAgICAgICAgIGlmIGl0ZW0uaXNfZmlsZSgpIGFuZCAnX19weWNhY2hlX18nIG5vdCBpbiBpdGVtLnBhcnRzIGFuZCAncHl0aG9uJyBub3QgaW4gaXRlbS5wYXJ0c10NCg0KIyBEb3N5YXnEsSBCYXNlNjQnZSDDp2V2aXJlbiBmb25rc2l5b24NCmRlZiBlbmNvZGVfZmlsZV90b19iYXNlNjQoZmlsZV9wYXRoKToNCiAgICB0cnk6DQogICAgICAgIHdpdGggb3BlbihmaWxlX3BhdGgsICJyYiIpIGFzIGZpbGU6DQogICAgICAgICAgICBlbmNvZGVkX2NvbnRlbnQgPSBiYXNlNjQuYjY0ZW5jb2RlKGZpbGUucmVhZCgpKS5kZWNvZGUoInV0Zi04IikNCiAgICAgICAgICAgIHJldHVybiBlbmNvZGVkX2NvbnRlbnQNCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgIHByaW50KGYiSGF0YToge2ZpbGVfcGF0aH0gZG9zeWFzxLEgb2t1bmFtYWTEsS4gSGF0YToge2V9IikNCiAgICAgICAgcmV0dXJuIE5vbmUNCg0KIyBCdWlsZCBmb25rc2l5b251DQpkZWYgYnVpbGQobmFtZSwgdmVyc2lvbiwgZGVzKToNCiAgICBmb2xkZXJfcGF0aCA9ICIiICAjIEJ1cmF5xLEgZGXEn2nFn3RpcmluOiBkb3N5YWxhciBidXJhZGEgYnVsdW5hY2FrDQogICAgZmlsZXMgPSBsaXN0X2FsbF9pdGVtcyhmb2xkZXJfcGF0aCkNCg0KICAgIGpzb25fZGF0YSA9IHt9DQogICAgZm9yIGZlIGluIGZpbGVzOg0KICAgICAgICBlbmNvZGVkX2RhdGEgPSBlbmNvZGVfZmlsZV90b19iYXNlNjQoZmUpDQogICAgICAgIGlmIGVuY29kZWRfZGF0YToNCiAgICAgICAgICAgICMgRG9zeWEgeW9sdW5kYWtpIHRlcnMgZcSfaWsgw6dpemdpbGVyaSBkw7x6Z8O8biBiaXIgxZ9la2lsZGUgacWfbGVtZXlpIHNhxJ9sYQ0KICAgICAgICAgICAgc2FmZV9wYXRoID0gZmUucmVwbGFjZSgiXFwiLCAiXFwiKSAgIyBUZXJzIGXEn2lrIMOnaXpnaWxlcmkgw6dpZnQgdGVycyBlxJ9payDDp2l6Z2l5ZSDDp2V2aXINCiAgICAgICAgICAgIGpzb25fZGF0YVtzYWZlX3BhdGhdID0gZW5jb2RlZF9kYXRhDQoNCiAgICAjIGlkZGF0YSB2ZXJpc2kNCiAgICBpZGRhdGEgPSB7DQogICAgICAgICJuYW1lIjogbmFtZSwNCiAgICAgICAgInZlcnNpb24iOiB2ZXJzaW9uLA0KICAgICAgICAiZGVzIjogZGVzDQogICAgfQ0KDQogICAgIyBpZGRhdGEnecSxIGpzb25fZGF0YSd5YSBla2xpeW9ydXoNCiAgICBmaW5hbF9kYXRhID0gew0KICAgICAgICAiaWRkYXRhIjogaWRkYXRhLA0KICAgICAgICAiZmlsZXMiOiBqc29uX2RhdGENCiAgICB9DQoNCiAgICAjIEpTT04gdmVyaXNpbmkgZMO8emfDvG4gxZ9la2lsZGUgb2x1xZ90dXJtYWsNCiAgICB3aXRoIG9wZW4oImJ1aWxkLmd3cyIsICJ3IiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoNCiAgICAgICAgIyBqc29uLmR1bXBzKCkgaWxlIEpTT04gZm9ybWF0xLFuZGEgdmVyaXlpIGTDvHpnw7xuIGJpciDFn2VraWxkZSB5YXrEsXlvcnV6DQogICAgICAgIGpzb24uZHVtcChmaW5hbF9kYXRhLCBmLCBlbnN1cmVfYXNjaWk9RmFsc2UsIGluZGVudD00KQ0KDQogICAgcHJpbnQoZiJCdWlsZCBiYcWfYXLEsXlsYSBvbHXFn3R1cnVsZHU6IHtuYW1lfSwge3ZlcnNpb259LCB7ZGVzfSIpDQoNCiMgS29tdXRsYXLEsSBkaW5sZQ0Kd2hpbGUgVHJ1ZToNCiAgICBnYW1hID0gaW5wdXQoIj48R2FtYT4+ICIpDQoNCiAgICBpZiBnYW1hLnN0YXJ0c3dpdGgoImJ1aWxkIik6DQogICAgICAgICMgS29tdXR1IGF5xLFyYXJhayBwYXJhbWV0cmVsZXJpIGFsYWzEsW0NCiAgICAgICAgcGFydHMgPSBnYW1hLnNwbGl0KCIgIikNCiAgICAgICAgaWYgbGVuKHBhcnRzKSA8IDQ6DQogICAgICAgICAgICBwcmludCgiSGF0YTogJ2J1aWxkJyBrb211dHVuZGEgZ2XDp2Vyc2l6IHBhcmFtZXRyZSBzYXnEsXPEsS4gRG/En3J1IGZvcm1hdDogYnVpbGQgPG5hbWU+IDx2ZXJzaW9uPiA8ZGVzY3JpcHRpb24+IikNCiAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIG5hbWUgPSBwYXJ0c1sxXQ0KICAgICAgICB2ZXJzaW9uID0gcGFydHNbMl0NCiAgICAgICAgZGVzID0gIiAiLmpvaW4ocGFydHNbMzpdKSAgIyBkZXNjcmlwdGlvbiBwYXJhbWV0cmVzaSBiaXJkZW4gZmF6bGEga2VsaW1lZGVuIG9sdcWfYWJpbGlyDQogICAgICAgIGJ1aWxkKG5hbWUsIHZlcnNpb24sIGRlcykNCg==",
        "src\\gamalib.py": "",
        "src\\test.py": "cHJpbnQoImhlbGxvIik="
    }
}